:-[gui_agent].

slowness(1000). % time between steps in ms

maxsteps(10).

% try also new_console instead of new_ide

vivo_agent(Goal,Port):-vivo_agent(Port,Goal,Port). 

vivo_agent(WinName,Goal,Port):-
  %server_port<=Port, % done by gui_agent
  finished<=no,
  gui_agent(new_console,WinName,Port,Goal).

vivo_wait:-sleep(200000),halt.

vivo_stop:-
  finished<=yes,
  agent_stop,
  bg(and(sleep(1),halt)).

/*
out_mes(From,To,Mes):-rli_call(To,out_term(From,To,Mes)).

in_mes(From,To,Mes):-rli_call(To,in_term(From,To,Mes)).

rd_mes(From,To,Mes):-rli_call(To,rd_term(From,To,Mes)).  
*/

out_mes(From,To,Mes):-rli_out(To,mes(From,Mes)).

in_mes(From,To,Mes):-rli_in(To,mes(From,Mes)).

event_source(Self):-
  writeln(starting_source(Self)),
  rli_in(broker,ready_token),
  writeln(source_ready(Self)), 
  maxsteps(Max),
  slowness(MS),
  for(I,1,Max),
    sleep_ms(MS),
    writeln(sent(agent2,event(I))),
    fg(out_mes(Self,agent2,event(I))),
    writeln(sent(agent3,event(I))),
    fg(out_mes(Self,agent3,event(I))),
  fail.
event_source:-writeln(source_finished).

fg(Goal):-Goal.
  
event_target(Self):-
  writeln(starting_target(Self)),nl,
  rli_in(broker,ready_token),
  writeln(target_ready(Self)), 
  maxsteps(Max),
  for(_,1,Max),
    fg(
     and(
      in_mes(agent1,Self,Mes),
      writeln(received=Mes),
      nl
     )
    ),
  fail.
event_target:-writeln(target_finished).  

