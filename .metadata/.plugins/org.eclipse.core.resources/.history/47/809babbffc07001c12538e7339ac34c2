package prolog.kernel;
import prolog.logic.*;
import java.io.IOException;

/**
* Instance of the main interpreter, based on shared code,dict,atoms from this.prolog
*/
public final class PrologEngine extends Machine {

  Machine newMachine(Prolog prolog, PrologReader input, PrologWriter output) {
    //Prolog.dump("creating a PrologEngine");
    return new PrologEngine(prolog,input,output);
  }

  PrologEngine(Prolog prolog,PrologReader input,PrologWriter output) {
    super(prolog,input,output);
    //this.extender=new Extender(this);
  }

  /**
   Builds a new Prolog Machine and initialize.

   String representations of answers can be produced
   by calling run(), which returns null when
   no more ansers can be produced.
  
   The Machine can be halted by calling stop().
   */
  
  final static PrologEngine new_machine(Prolog P,PrologReader input,PrologWriter output) {
    if(null==P) return null;
    PrologEngine M=new PrologEngine(P,input,output);
    return M;
  }
  
  final static PrologEngine new_machine(PrologReader input,PrologWriter output) {
    Prolog P=Prolog.getDefaultProlog();
    return new_machine(P,input,output);
  }
}
